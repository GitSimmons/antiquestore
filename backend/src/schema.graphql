# import * from 'generated/prisma.graphql'

enum Permission {
  ADMIN
  USER
  ITEMCREATE
  ITEMUPDATE
  ITEMDELETE
  PERMISSIONUPDATE
}

type User {
  id: String
  name: String
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: Float
  permissions: [Permission]
}


type Item {
  id: String
  title: String
  description: String
  price: Int
  cost: Int
  consigner: String
  consignmentRate: Int
  consignmentStart: DateTime
  consignmentEnd: DateTime
  sold: Boolean
  soldTo: String
  soldFor: Int
  images: [String]
  largeImages: [String]
  image: String
}

type Mutation {
  createItem(
    title: String!
    description: String!
    price: Int
    cost: Int
    consigner: String
    consignmentRate: Int
    consignmentStart: DateTime
    consignmentEnd: DateTime
    sold: Boolean
    soldTo: String
    soldFor: Int
    images: [String]
    largeImages: [String]
    image: String
  ): Item!
  updateItem(data: ItemUpdateInput!, where: ItemWhereUniqueInput!): Item
  deleteItem(
    id: ID!
  ): Item!
  createUser (
    name: String
    email: String
    password: String
  ) : User!
  signIn (
    email: String
    password: String
  ) : User
}

type Query {
  items(where: ItemWhereInput, orderBy: ItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Item]!
  item(where: ItemWhereUniqueInput!): Item
  itemsConnection(where: ItemWhereInput): ItemConnection!
  users: [User]!
  user(where: UserWhereUniqueInput!): User

}